name: Feature Validation

on:
  pull_request:
    branches: [main, develop]
  push:
    branches-ignore: [main, develop]
    paths:
      - 'packages/**'
      - 'package.json'
      - 'yarn.lock'
      - 'app-config*.yaml'
      - 'plugins/**'
      - 'examples/**'
      - '.github/workflows/**'
      - 'tsconfig.json'
      - 'eslint*'
  workflow_dispatch:

env:
  NODE_VERSION: '20.19.5'

jobs:
  # Job 1: Validación de Features
  feature-validation:
    name: 🔍 Feature Validation
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Get yarn cache directory
        id: yarn-cache-dir
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: Cache yarn dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ steps.yarn-cache-dir.outputs.dir }}
            .yarn/cache
            .yarn/install-state.gz
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
            ${{ runner.os }}-

      - name: Install dependencies
        run: |
          echo "📦 Installing dependencies for feature branch validation..."
          yarn install --immutable

      - name: Quick TypeScript check
        run: |
          echo "📝 Quick TypeScript check..."
          npx tsc --noEmit

      - name: Critical security audit
        run: |
          echo "🔐 Critical security audit (HIGH/CRITICAL only)..."
          yarn npm audit --severity high --recursive || echo "⚠️ High severity vulnerabilities found"

      - name: Dependency integrity check
        run: |
          echo "🔒 Checking dependency integrity..."
          yarn install --check-cache --silent || echo "⚠️ Dependency integrity issues found"

      - name: Check for dependency conflicts
        run: |
          echo "🔍 Checking for dependency conflicts..."
          if yarn check --integrity 2>/dev/null; then
            echo "✅ No dependency conflicts found"
          else
            echo "⚠️ Potential dependency conflicts detected"
            echo "💡 Run 'yarn install' locally to resolve conflicts"
          fi

      - name: Validate package.json structure
        run: |
          echo "📋 Validating package.json structure..."
          if [ -f "package.json" ]; then
            echo "✅ package.json found"
            # Verificar que tenga los campos esenciales
            if jq -e '.name and .version and .dependencies' package.json > /dev/null 2>&1; then
              echo "✅ package.json structure is valid"
            else
              echo "❌ package.json missing required fields"
              exit 1
            fi
          else
            echo "❌ package.json not found"
            exit 1
          fi

      - name: Feature validation summary
        if: always()
        run: |
          echo "## 🔍 Feature Validation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "**Type**: Pull Request" >> $GITHUB_STEP_SUMMARY
            echo "**PR**: #${{ github.event.number }}" >> $GITHUB_STEP_SUMMARY
            echo "**Branch**: ${{ github.head_ref }}" >> $GITHUB_STEP_SUMMARY
            echo "**Target**: ${{ github.base_ref }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Type**: Feature Branch Push" >> $GITHUB_STEP_SUMMARY
            echo "**Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          fi
          echo "**Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Author**: @${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Quick Validation Results" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ TypeScript compilation (quick check)" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Critical security audit (HIGH/CRITICAL only)" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Dependency integrity" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Dependency conflicts check" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ package.json structure validation" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Note**: Full validation (linting, formatting, etc.) will run in main pipeline" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "**Status**: Ready for review and merge" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Status**: Feature branch validated - ready for PR creation" >> $GITHUB_STEP_SUMMARY
          fi
