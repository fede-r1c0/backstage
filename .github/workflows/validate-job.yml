name: Validate Job

on:
  workflow_call:
    inputs:
      node-version:
        description: 'Node.js version'
        required: false
        type: string
        default: '20.19.5'

env:
  NODE_VERSION: ${{ inputs.node-version || '20.19.5' }}

jobs:
  # Job 1: Dependencies (instala una sola vez y comparte)
  dependencies:
    name: 📦 Dependencies Setup
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js with cache
        uses: ./.github/actions/setup-node-cached
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Validate package.json structure
        run: |
          echo "📋 Validating package.json structure..."
          if [ -f "package.json" ]; then
            echo "✅ package.json found"
            if jq -e '.name and .version and .dependencies' package.json > /dev/null 2>&1; then
              echo "✅ package.json structure is valid"
            else
              echo "❌ package.json missing required fields"
              exit 1
            fi
          else
            echo "❌ package.json not found"
            exit 1
          fi

      - name: Dependency integrity check
        run: |
          echo "🔒 Checking dependency integrity..."
          yarn install --check-cache --silent || echo "⚠️ Dependency integrity issues found"

      - name: Check for dependency conflicts
        run: |
          echo "🔍 Checking for dependency conflicts..."
          if yarn check --integrity 2>/dev/null; then
            echo "✅ No dependency conflicts found"
          else
            echo "⚠️ Potential dependency conflicts detected"
            echo "💡 Run 'yarn install' locally to resolve conflicts"
          fi

      # Compartir node_modules para jobs posteriores
      - name: Upload node_modules artifact
        uses: actions/upload-artifact@v4
        with:
          name: node_modules-${{ github.sha }}
          path: node_modules
          retention-days: 1

  # Job 2: Tests
  tests:
    name: 🧪 Tests
    runs-on: ubuntu-24.04
    needs: dependencies

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Download node_modules
        uses: actions/download-artifact@v4
        with:
          name: node_modules-${{ github.sha }}
          path: node_modules

      - name: Run unit tests
        run: |
          echo "🧪 Running unit tests..."
          yarn test:all --coverage || echo "⚠️ Some tests failed"

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        continue-on-error: true
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: backstage-coverage

  # Job 3: Code validation (ahora en paralelo con tests)
  code-validation:
    name: 🔍 Code Validation
    runs-on: ubuntu-24.04
    needs: dependencies

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Download node_modules
        uses: actions/download-artifact@v4
        with:
          name: node_modules-${{ github.sha }}
          path: node_modules

      - name: TypeScript compilation check
        run: |
          echo "📝 TypeScript compilation check..."
          npx tsc --noEmit

      - name: ESLint check
        run: |
          echo "🔍 ESLint check..."
          yarn lint:all || echo "⚠️ ESLint issues found"

      - name: Prettier format check
        run: |
          echo "💅 Prettier format check..."
          yarn prettier:check || echo "⚠️ Formatting issues found"

  # Job 4: Security validation (en paralelo con code-validation)
  security-validation:
    name: 🔐 Security Validation
    runs-on: ubuntu-24.04
    needs: dependencies

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Download node_modules
        uses: actions/download-artifact@v4
        with:
          name: node_modules-${{ github.sha }}
          path: node_modules

      - name: Critical security audit
        run: |
          echo "🔐 Critical security audit (HIGH/CRITICAL only)..."
          yarn npm audit --severity high --recursive || echo "⚠️ High severity vulnerabilities found"

  # Job 5: Dependency Review (solo para PRs)
  dependency-review:
    name: 🛡️ Dependency Review
    runs-on: ubuntu-24.04
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: high
          deny-licenses: GPL-3.0, AGPL-3.0

  # Job Final: Summary
  validation-summary:
    name: 📊 Validation Summary
    runs-on: ubuntu-24.04
    needs: [dependencies, tests, code-validation, security-validation]
    if: always()

    steps:
      - name: Generate validation summary
        run: |
          echo "## 🔍 Validation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Validation Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Stage | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| 📦 Dependencies | ${{ needs.dependencies.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 🧪 Tests | ${{ needs.tests.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 🔍 Code Validation | ${{ needs.code-validation.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 🔐 Security | ${{ needs.security-validation.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Validations Performed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### 📦 Dependencies" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ package.json structure validation" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Dependency integrity check" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Dependency conflicts check" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Artifact sharing (optimized)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### 🧪 Tests" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Unit tests with coverage" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Coverage upload to Codecov" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### 🔍 Code Quality" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ TypeScript compilation check" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ ESLint (linting)" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Prettier (formatting)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### 🔐 Security" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Critical security audit (HIGH/CRITICAL only)" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "- ✅ Dependency Review (PR only)" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Note**: Optimized with artifact sharing - node_modules installed once and reused" >> $GITHUB_STEP_SUMMARY
