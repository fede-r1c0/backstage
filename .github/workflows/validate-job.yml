name: Validate Job

on:
  workflow_call:
    inputs:
      node-version:
        description: "Node.js version"
        required: false
        type: string
        default: "20.19.5"

env:
  NODE_VERSION: ${{ inputs.node-version || '20.19.5' }}

jobs:
  # Job 1: Tests
  tests:
    name: 🧪 Tests
    runs-on: ubuntu-24.04

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js with Yarn Cache
        uses: ./.github/actions/setup-node-cached
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 🧪 Run Unit Tests with Coverage
        run: |
          echo "🧪 Running unit tests..."
          yarn test:all --coverage || echo "⚠️ Some tests failed"

      - name: 📊 Upload Coverage to Codecov
        uses: codecov/codecov-action@v4
        if: always()
        continue-on-error: true
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: backstage-coverage

  # Job 2: Code validation (now in parallel with tests)
  code-validation:
    name: 🔍 Code Validation
    runs-on: ubuntu-24.04

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js with Yarn Cache
        uses: ./.github/actions/setup-node-cached
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📝 TypeScript Compilation Check
        run: |
          echo "📝 TypeScript compilation check..."
          yarn tsc

      - name: 🔍 ESLint Analysis
        run: |
          echo "🔍 ESLint check..."
          yarn lint:all || echo "⚠️ ESLint issues found"

      - name: 💅 Prettier Format Check
        run: |
          echo "💅 Prettier format check..."
          yarn prettier:check || echo "⚠️ Formatting issues found"

  # Job 3: Security validation (in parallel with code-validation)
  security-validation:
    name: 🔐 Security Validation
    runs-on: ubuntu-24.04

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js with Yarn Cache
        uses: ./.github/actions/setup-node-cached
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 🔐 NPM Security Audit (HIGH/CRITICAL)
        run: |
          echo "🔐 Critical security audit (HIGH/CRITICAL only)..."
          yarn npm audit --severity high --recursive || echo "⚠️ High severity vulnerabilities found"

  # Job 4: Dependency Review (PRs only)
  dependency-review:
    name: 🛡️ Dependency Review
    runs-on: ubuntu-24.04
    if: github.event_name == 'pull_request'

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🛡️ Dependency Review (License & Security)
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: high
          deny-licenses: GPL-3.0, AGPL-3.0

  # Job Final: Summary
  validation-summary:
    name: 📊 Validation Summary
    runs-on: ubuntu-24.04
    needs: [tests, code-validation, security-validation]
    if: always()

    steps:
      - name: 📊 Generate Validation Summary
        run: |
          echo "## 🔍 Validation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Validation Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Stage | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| 🧪 Tests | ${{ needs.tests.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 🔍 Code Validation | ${{ needs.code-validation.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 🔐 Security | ${{ needs.security-validation.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Validations Performed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### 🧪 Tests" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Unit tests with coverage" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Coverage upload to Codecov" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### 🔍 Code Quality" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ TypeScript compilation check" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ ESLint (linting)" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Prettier (formatting)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### 🔐 Security" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Critical security audit (HIGH/CRITICAL only)" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "- ✅ Dependency Review (PR only)" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Note**: Optimized with Yarn cache - dependencies cached across runs" >> $GITHUB_STEP_SUMMARY
