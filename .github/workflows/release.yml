name: 🚀 Semantic Release

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Dry run (no changes, only preview)"
        required: false
        type: boolean
        default: false

permissions:
  contents: write # Para crear tags y commits
  issues: write # Para comentar en issues cerrados
  pull-requests: write # Para comentar en PRs

env:
  NODE_VERSION: "20.19.5"

jobs:
  release:
    name: 📦 Create Release
    runs-on: ubuntu-24.04

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Necesario para semantic-release
          persist-credentials: false

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "yarn"

      - name: 📦 Install dependencies
        run: |
          yarn install --immutable

      - name: 🚀 Run Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: github-actions[bot]
          GIT_AUTHOR_EMAIL: github-actions[bot]@users.noreply.github.com
          GIT_COMMITTER_NAME: github-actions[bot]
          GIT_COMMITTER_EMAIL: github-actions[bot]@users.noreply.github.com
        run: |
          if [[ "${{ inputs.dry_run }}" == "true" ]]; then
            echo "🔍 Running in DRY RUN mode - No changes will be made"
            npx semantic-release --dry-run
          else
            echo "🚀 Running LIVE release"
            npx semantic-release
          fi

      - name: 📊 Generate Summary
        if: always()
        run: |
          echo "# 🚀 Semantic Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ inputs.dry_run }}" == "true" ]]; then
            echo "**Mode**: 🔍 Dry Run (Preview only)" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Mode**: 🚀 Live Release" >> $GITHUB_STEP_SUMMARY
          fi

          echo "**Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Triggered by**: @${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Si existe el archivo .version, mostrar la nueva versión
          if [[ -f .version ]]; then
            NEW_VERSION=$(cat .version)
            echo "## ✅ Release Created" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**New Version**: \`${NEW_VERSION}\`" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 🐳 Docker Images" >> $GITHUB_STEP_SUMMARY
            echo '```bash' >> $GITHUB_STEP_SUMMARY
            echo "docker pull ghcr.io/${{ github.repository_owner }}/backstage:${NEW_VERSION}" >> $GITHUB_STEP_SUMMARY
            echo "docker pull ghcr.io/${{ github.repository_owner }}/backstage:latest" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          else
            echo "## ℹ️ No Release Created" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "No new version was created. Possible reasons:" >> $GITHUB_STEP_SUMMARY
            echo "- No commits since last release" >> $GITHUB_STEP_SUMMARY
            echo "- Only chore/docs commits (no feat/fix)" >> $GITHUB_STEP_SUMMARY
            echo "- Dry run mode enabled" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "**Time**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> $GITHUB_STEP_SUMMARY

