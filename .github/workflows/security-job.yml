name: Security Job

on:
  workflow_call:
    inputs:
      registry:
        description: "Container registry"
        required: false
        type: string
        default: "ghcr.io"
      image-digest:
        description: "Docker image digest to scan (immutable reference)"
        required: true
        type: string

env:
  REGISTRY: ${{ inputs.registry || 'ghcr.io' }}
  IMAGE_NAME: ${{ github.repository_owner }}/backstage

jobs:
  security-scan:
    name: 🔐 Security Scan
    runs-on: ubuntu-24.04
    continue-on-error: true
    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # Scan image using digest (immutable and precise)
      - name: 🔍 Run Trivy Vulnerability Scanner (SARIF)
        uses: aquasecurity/trivy-action@master
        with:
          # ✅ Use digest instead of tag to scan the exact image
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ inputs.image-digest }}
          scan-type: "image"
          format: "sarif"
          output: "trivy-results.sarif"
          severity: "MEDIUM,HIGH,CRITICAL"
          # Scan vulnerabilities and configuration
          scanners: "vuln,config"
          # Optimizations
          skip-dirs: "node_modules,dist,build"
          timeout: "10m"

      - name: 📤 Upload SARIF to GitHub Security Tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

      # Generate additional JSON report for analysis
      - name: 🔍 Run Trivy Scanner (JSON Report)
        uses: aquasecurity/trivy-action@master
        if: always()
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ inputs.image-digest }}
          scan-type: "image"
          format: "json"
          output: "trivy-results.json"
          severity: "MEDIUM,HIGH,CRITICAL"
          scanners: "vuln,config"

      - name: 📊 Parse Vulnerabilities & Generate Summary
        if: always()
        run: |
          echo "## 🔐 Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Image**: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Digest**: \`${{ inputs.image-digest }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Parse results if JSON exists
          if [ -f trivy-results.json ]; then
            CRITICAL=$(jq '[.Results[]?.Vulnerabilities[]? | select(.Severity=="CRITICAL")] | length' trivy-results.json 2>/dev/null || echo "0")
            HIGH=$(jq '[.Results[]?.Vulnerabilities[]? | select(.Severity=="HIGH")] | length' trivy-results.json 2>/dev/null || echo "0")
            MEDIUM=$(jq '[.Results[]?.Vulnerabilities[]? | select(.Severity=="MEDIUM")] | length' trivy-results.json 2>/dev/null || echo "0")

            echo "### 📊 Vulnerability Summary" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "| Severity | Count |" >> $GITHUB_STEP_SUMMARY
            echo "|----------|-------|" >> $GITHUB_STEP_SUMMARY
            echo "| 🔴 CRITICAL | $CRITICAL |" >> $GITHUB_STEP_SUMMARY
            echo "| 🟠 HIGH | $HIGH |" >> $GITHUB_STEP_SUMMARY
            echo "| 🟡 MEDIUM | $MEDIUM |" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY

            if [ "$CRITICAL" -gt 0 ] || [ "$HIGH" -gt 0 ]; then
              echo "### ⚠️ Action Required" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "Critical or High severity vulnerabilities detected!" >> $GITHUB_STEP_SUMMARY
              echo "Check the **Security** tab for detailed reports." >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
            else
              echo "### ✅ No Critical/High Vulnerabilities" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
            fi
          fi

          echo "### 🔍 Scan Details" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Image scanned using digest (immutable)" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Vulnerability scan (CVEs)" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Configuration scan (best practices)" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Results uploaded to Security tab" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Severity levels: MEDIUM, HIGH, CRITICAL" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 Resources" >> $GITHUB_STEP_SUMMARY
          echo "- [Security Tab](https://github.com/${{ github.repository }}/security)" >> $GITHUB_STEP_SUMMARY
          echo "- [Trivy Documentation](https://aquasecurity.github.io/trivy/)" >> $GITHUB_STEP_SUMMARY

      - name: 📦 Upload Trivy Report as Artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: trivy-scan-results-${{ github.sha }}
          path: trivy-results.json
          retention-days: 30
